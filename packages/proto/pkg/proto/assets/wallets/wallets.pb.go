// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wallets/wallets.proto

package wallets

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Health check request message - no parameters required
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_wallets_wallets_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallets_wallets_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_wallets_wallets_proto_rawDescGZIP(), []int{0}
}

// Health check response containing service status and wallet system health
type HealthCheckResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Service status indicator including wallet backend health ("healthy", "degraded", "unhealthy")
	Status        string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_wallets_wallets_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallets_wallets_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_wallets_wallets_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Request message for creating a new digital wallet
type CreateWalletRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the user who will own this wallet (UUID format)
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Initial balance amount to set in the wallet (base currency unit, e.g., dollars not cents)
	Amount        float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	mi := &file_wallets_wallets_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallets_wallets_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallets_wallets_proto_rawDescGZIP(), []int{2}
}

func (x *CreateWalletRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateWalletRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// Response message for wallet creation operation
type CreateWalletResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Operation status indicating wallet creation success or failure ("created", "failed", "pending")
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Confirmed initial balance amount set in the wallet
	Amount        float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletResponse) Reset() {
	*x = CreateWalletResponse{}
	mi := &file_wallets_wallets_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletResponse) ProtoMessage() {}

func (x *CreateWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallets_wallets_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletResponse.ProtoReflect.Descriptor instead.
func (*CreateWalletResponse) Descriptor() ([]byte, []int) {
	return file_wallets_wallets_proto_rawDescGZIP(), []int{3}
}

func (x *CreateWalletResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateWalletResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_wallets_wallets_proto protoreflect.FileDescriptor

const file_wallets_wallets_proto_rawDesc = "" +
	"\n" +
	"\x15wallets/wallets.proto\x12\awallets\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x14\n" +
	"\x12HealthCheckRequest\"-\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"F\n" +
	"\x13CreateWalletRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\"F\n" +
	"\x14CreateWalletResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount2\xdb\x01\n" +
	"\x0eWalletsService\x12d\n" +
	"\vHealthCheck\x12\x1b.wallets.HealthCheckRequest\x1a\x1c.wallets.HealthCheckResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/wallets/health\x12c\n" +
	"\fCreateWallet\x12\x1c.wallets.CreateWalletRequest\x1a\x1d.wallets.CreateWalletResponse\"\x16\x82\xd3\xe4\x93\x02\x10:\x01*\"\v/v1/walletsB\xa5\x02\x92A\x94\x01\x12\x91\x01\n" +
	"\vWallets API\x12}Digital wallet management service API for creating, managing user wallets, balance tracking, and financial account operations2\x031.0\n" +
	"\vcom.walletsB\fWalletsProtoP\x01Z4github.com/sundowndev/grpc-api-example/proto/wallets\xa2\x02\x03WXX\xaa\x02\aWallets\xca\x02\aWallets\xe2\x02\x13Wallets\\GPBMetadata\xea\x02\aWalletsb\x06proto3"

var (
	file_wallets_wallets_proto_rawDescOnce sync.Once
	file_wallets_wallets_proto_rawDescData []byte
)

func file_wallets_wallets_proto_rawDescGZIP() []byte {
	file_wallets_wallets_proto_rawDescOnce.Do(func() {
		file_wallets_wallets_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallets_wallets_proto_rawDesc), len(file_wallets_wallets_proto_rawDesc)))
	})
	return file_wallets_wallets_proto_rawDescData
}

var file_wallets_wallets_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_wallets_wallets_proto_goTypes = []any{
	(*HealthCheckRequest)(nil),   // 0: wallets.HealthCheckRequest
	(*HealthCheckResponse)(nil),  // 1: wallets.HealthCheckResponse
	(*CreateWalletRequest)(nil),  // 2: wallets.CreateWalletRequest
	(*CreateWalletResponse)(nil), // 3: wallets.CreateWalletResponse
}
var file_wallets_wallets_proto_depIdxs = []int32{
	0, // 0: wallets.WalletsService.HealthCheck:input_type -> wallets.HealthCheckRequest
	2, // 1: wallets.WalletsService.CreateWallet:input_type -> wallets.CreateWalletRequest
	1, // 2: wallets.WalletsService.HealthCheck:output_type -> wallets.HealthCheckResponse
	3, // 3: wallets.WalletsService.CreateWallet:output_type -> wallets.CreateWalletResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wallets_wallets_proto_init() }
func file_wallets_wallets_proto_init() {
	if File_wallets_wallets_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallets_wallets_proto_rawDesc), len(file_wallets_wallets_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallets_wallets_proto_goTypes,
		DependencyIndexes: file_wallets_wallets_proto_depIdxs,
		MessageInfos:      file_wallets_wallets_proto_msgTypes,
	}.Build()
	File_wallets_wallets_proto = out.File
	file_wallets_wallets_proto_goTypes = nil
	file_wallets_wallets_proto_depIdxs = nil
}
