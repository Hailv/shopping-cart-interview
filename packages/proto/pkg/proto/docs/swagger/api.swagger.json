{
  "swagger": "2.0",
  "info": {
    "title": "Stripe Adapter API",
    "description": "Stripe payment adapter service API providing integration with Stripe payment processing including payment methods, transactions, and refund management",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "cart.CartService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/stripe/health": {
      "get": {
        "summary": "Health check endpoint to verify Stripe adapter service availability and connection status",
        "operationId": "CartService_HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cartHealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "cart.CartService"
        ]
      }
    },
    "/v1/stripe/payment-methods": {
      "get": {
        "summary": "List all available payment methods configured in Stripe",
        "operationId": "CartService_ListPaymentMethods",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cartListPaymentMethodsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "cart.CartService"
        ]
      }
    },
    "/v1/stripe/payment-methods/{paymentMethodCode}": {
      "get": {
        "summary": "Get details of a specific payment method by its code identifier",
        "operationId": "CartService_GetPaymentMethod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cartGetPaymentMethodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "paymentMethodCode",
            "description": "VARCHAR(70)",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "cart.CartService"
        ]
      },
      "delete": {
        "summary": "Delete a payment method permanently from Stripe",
        "operationId": "CartService_DeletePaymentMethod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cartDeletePaymentMethodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "paymentMethodCode",
            "description": "VARCHAR(70)",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "cart.CartService"
        ]
      }
    },
    "/v1/stripe/payment-methods/{paymentMethodCode}/disable": {
      "post": {
        "summary": "Disable a payment method to prevent new transactions",
        "operationId": "CartService_DisablePaymentMethod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cartDisablePaymentMethodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "paymentMethodCode",
            "description": "VARCHAR(70)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CartServiceDisablePaymentMethodBody"
            }
          }
        ],
        "tags": [
          "cart.CartService"
        ]
      }
    },
    "/v1/stripe/payment-methods/{paymentMethodCode}/enable": {
      "post": {
        "summary": "Enable a payment method for processing transactions",
        "operationId": "CartService_EnablePaymentMethod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cartEnablePaymentMethodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "paymentMethodCode",
            "description": "VARCHAR(70)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CartServiceEnablePaymentMethodBody"
            }
          }
        ],
        "tags": [
          "cart.CartService"
        ]
      }
    },
    "/v1/stripe/payments": {
      "post": {
        "summary": "Create a new payment transaction through Stripe",
        "operationId": "CartService_CreatePayment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cartCreatePaymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cartCreatePaymentRequest"
            }
          }
        ],
        "tags": [
          "cart.CartService"
        ]
      }
    },
    "/v1/stripe/payments/{paymentId}": {
      "put": {
        "summary": "Update an existing payment transaction in Stripe",
        "operationId": "CartService_UpdatePayment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cartUpdatePaymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CartServiceUpdatePaymentBody"
            }
          }
        ],
        "tags": [
          "cart.CartService"
        ]
      }
    },
    "/v1/stripe/refunds": {
      "post": {
        "summary": "Create a new refund for a processed payment through Stripe",
        "operationId": "CartService_CreateRefund",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cartCreateRefundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cartCreateRefundRequest"
            }
          }
        ],
        "tags": [
          "cart.CartService"
        ]
      }
    },
    "/v1/stripe/refunds/{refundId}": {
      "put": {
        "summary": "Update an existing refund transaction in Stripe",
        "operationId": "CartService_UpdateRefund",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cartUpdateRefundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "refundId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CartServiceUpdateRefundBody"
            }
          }
        ],
        "tags": [
          "cart.CartService"
        ]
      }
    }
  },
  "definitions": {
    "CartServiceDisablePaymentMethodBody": {
      "type": "object",
      "title": "DisablePaymentMethodRequest is the request for disabling a payment method"
    },
    "CartServiceEnablePaymentMethodBody": {
      "type": "object",
      "title": "EnablePaymentMethodRequest is the request for enabling a payment method"
    },
    "CartServiceUpdatePaymentBody": {
      "type": "object",
      "properties": {
        "payment": {
          "$ref": "#/definitions/cartPayment"
        },
        "webhook": {
          "$ref": "#/definitions/cartWebhook"
        }
      },
      "title": "Update payment messages"
    },
    "CartServiceUpdateRefundBody": {
      "type": "object",
      "properties": {
        "partnerRefundId": {
          "type": "string",
          "title": "Stripe refund ID"
        },
        "status": {
          "type": "string"
        },
        "eventType": {
          "type": "string",
          "title": "Type of webhook event"
        },
        "eventId": {
          "type": "string",
          "title": "Stripe event ID"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional event metadata"
        }
      },
      "title": "Update refund messages"
    },
    "cartCreatePaymentRequest": {
      "type": "object",
      "properties": {
        "payment": {
          "$ref": "#/definitions/cartPayment"
        }
      },
      "title": "Create payment messages"
    },
    "cartCreatePaymentResponse": {
      "type": "object",
      "properties": {
        "payment": {
          "$ref": "#/definitions/cartPayment"
        }
      }
    },
    "cartCreateRefundRequest": {
      "type": "object",
      "properties": {
        "payment": {
          "$ref": "#/definitions/cartPayment",
          "title": "Original payment"
        },
        "refund": {
          "$ref": "#/definitions/cartRefund",
          "title": "New refund to create"
        }
      },
      "title": "Create refund messages"
    },
    "cartCreateRefundResponse": {
      "type": "object",
      "properties": {
        "refund": {
          "$ref": "#/definitions/cartRefund"
        }
      }
    },
    "cartDeletePaymentMethodResponse": {
      "type": "object",
      "title": "DeletePaymentMethodResponse is the response for deleting a payment method"
    },
    "cartDisablePaymentMethodResponse": {
      "type": "object",
      "title": "DisablePaymentMethodResponse is the response for disabling a payment method"
    },
    "cartEnablePaymentMethodResponse": {
      "type": "object",
      "title": "EnablePaymentMethodResponse is the response for enabling a payment method"
    },
    "cartGetPaymentMethodResponse": {
      "type": "object",
      "properties": {
        "paymentMethod": {
          "$ref": "#/definitions/cartPaymentMethod"
        }
      },
      "title": "GetPaymentMethodResponse is the response for getting a payment method"
    },
    "cartHealthCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "cartListPaymentMethodsResponse": {
      "type": "object",
      "properties": {
        "paymentMethods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cartPaymentMethod"
          }
        }
      },
      "title": "ListPaymentMethodsResponse is the response for listing payment methods"
    },
    "cartPayment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "BINARY(16)"
        },
        "paymentMethodId": {
          "type": "string",
          "title": "BINARY(16)"
        },
        "invoiceId": {
          "type": "string",
          "title": "BINARY(16)"
        },
        "amount": {
          "type": "number",
          "format": "double",
          "title": "NUMERIC(12,2)"
        },
        "status": {
          "type": "string",
          "title": "ENUM('pending', 'paid', 'failed', 'partially_refunded', 'refunded')"
        },
        "dueOn": {
          "type": "string",
          "title": "DATETIME"
        },
        "paidAt": {
          "type": "string",
          "title": "DATETIME"
        },
        "createdAt": {
          "type": "string",
          "title": "DATETIME"
        },
        "updatedAt": {
          "type": "string",
          "title": "DATETIME"
        },
        "attempts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cartPaymentAttempt"
          }
        },
        "refunds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cartRefund"
          }
        }
      },
      "title": "Payment represents a payment in the system"
    },
    "cartPaymentAttempt": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "BINARY(16)"
        },
        "paymentId": {
          "type": "string",
          "title": "BINARY(16)"
        },
        "paymentMethodId": {
          "type": "string",
          "title": "BINARY(16)"
        },
        "partnerId": {
          "type": "string",
          "title": "BINARY(16)"
        },
        "partnerCode": {
          "type": "string",
          "title": "VARCHAR(70)"
        },
        "status": {
          "type": "string",
          "title": "ENUM('pending', 'paid', 'failed', 'partially_refunded', 'refunded')"
        },
        "partnerPaymentId": {
          "type": "string",
          "title": "Stripe payment ID"
        },
        "redirectUrl": {
          "type": "string",
          "title": "Optional URL for redirect-based payment flows"
        },
        "errorMessage": {
          "type": "string",
          "title": "Optional error message if processing failed"
        },
        "createdAt": {
          "type": "string",
          "title": "DATETIME"
        }
      },
      "title": "PaymentAttempt represents a payment attempt in the system"
    },
    "cartPaymentMethod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "BINARY(16)"
        },
        "paymentMethodCode": {
          "type": "string",
          "title": "VARCHAR(70)"
        },
        "name": {
          "type": "string",
          "title": "VARCHAR(255)"
        },
        "description": {
          "type": "string",
          "title": "TEXT"
        },
        "status": {
          "type": "string",
          "title": "ENUM('active', 'inactive')"
        },
        "createdAt": {
          "type": "string",
          "title": "DATETIME"
        },
        "updatedAt": {
          "type": "string",
          "title": "DATETIME"
        },
        "deletedAt": {
          "type": "string",
          "title": "DATETIME"
        }
      },
      "title": "PaymentMethod represents a payment method in the system"
    },
    "cartRefund": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "paymentId": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "title": "ISO 8601 date string"
        },
        "updatedAt": {
          "type": "string",
          "title": "ISO 8601 date string"
        },
        "attempts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/cartRefundAttempt"
          }
        }
      },
      "title": "Refund represents a refund in the system"
    },
    "cartRefundAttempt": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "refundId": {
          "type": "string"
        },
        "partnerId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "partnerRefundId": {
          "type": "string",
          "title": "Stripe refund ID"
        },
        "errorMessage": {
          "type": "string",
          "title": "Optional error message if processing failed"
        },
        "createdAt": {
          "type": "string",
          "title": "ISO 8601 date string"
        },
        "updatedAt": {
          "type": "string",
          "title": "ISO 8601 date string"
        }
      },
      "title": "RefundAttempt represents a refund attempt in the system"
    },
    "cartUpdatePaymentResponse": {
      "type": "object",
      "properties": {
        "payment": {
          "$ref": "#/definitions/cartPayment"
        }
      }
    },
    "cartUpdateRefundResponse": {
      "type": "object",
      "properties": {
        "refund": {
          "$ref": "#/definitions/cartRefund"
        }
      }
    },
    "cartWebhook": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "partnerPaymentId": {
          "type": "string"
        },
        "partnerEventType": {
          "type": "string"
        },
        "partnerWebhookId": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "headers": {
          "type": "string",
          "format": "byte"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Webhook represents a webhook event in the system"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
