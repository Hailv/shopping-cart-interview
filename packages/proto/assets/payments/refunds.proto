syntax = "proto3";

package payments;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/cinchprotocol/cinch-api/packages/proto/pkg/proto/assets/payments";

// RefundStatus represents the status of a refund
enum RefundStatus {
  REFUND_STATUS_UNSPECIFIED = 0;
  REFUND_STATUS_PENDING = 1;
  REFUND_STATUS_COMPLETED = 2;
  REFUND_STATUS_FAILED = 3;
}

// Refund represents a refund in the system
message Refund {
  string id = 1;
  string payment_id = 2;
  double amount = 3;
  string reason = 4;
  RefundStatus status = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// CreateRefundRequest represents a request to create a refund
message CreateRefundRequest {
  string payment_id = 1;
  double amount = 2;
  string reason = 3;
}

// CreateRefundResponse represents a response to creating a refund
message CreateRefundResponse {
  Refund refund = 1;
}

// GetRefundRequest represents a request to get a refund
message GetRefundRequest {
  string id = 1;
}

// GetRefundResponse represents a response to getting a refund
message GetRefundResponse {
  Refund refund = 1;
}

// ListRefundsByPaymentRequest represents a request to list refunds by payment
// ID
message ListRefundsByPaymentRequest {
  string payment_id = 1;
}

// ListRefundsByPaymentResponse represents a response to listing refunds by
// payment ID
message ListRefundsByPaymentResponse {
  repeated Refund refunds = 1;
}

// UpdateRefundStatusRequest represents a request to update a refund status
message UpdateRefundStatusRequest {
  string id = 1;
  RefundStatus status = 2;
}

// UpdateRefundStatusResponse represents a response to updating a refund status
message UpdateRefundStatusResponse {
  Refund refund = 1;
}

// RefundService provides methods for managing refunds
service RefundService {
  // CreateRefund creates a new refund
  rpc CreateRefund(CreateRefundRequest) returns (CreateRefundResponse) {}
  // GetRefund retrieves a refund by ID
  rpc GetRefund(GetRefundRequest) returns (GetRefundResponse) {}
  // ListRefundsByPayment lists all refunds for a payment
  rpc ListRefundsByPayment(ListRefundsByPaymentRequest) returns (ListRefundsByPaymentResponse) {}
  // UpdateRefundStatus updates the status of a refund
  rpc UpdateRefundStatus(UpdateRefundStatusRequest) returns (UpdateRefundStatusResponse) {}
}
