syntax = "proto3";

package billing;

import "billing/common.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/cinchprotocol/cinch-api/packages/proto/pkg/proto/assets/billing";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Subscriptions API"
    version: "1.0"
    description: "Subscription lifecycle management service API for creating, managing, and billing recurring subscription services including activation, cancellation, and invoice generation"
  }
};

// SubscriptionsService provides comprehensive subscription lifecycle management including
// creation, billing cycle management, status changes, and recurring invoice generation
service SubscriptionsService {
  // List all subscriptions with optional filtering and pagination
  rpc ListSubscriptions(ListSubscriptionsRequest) returns (ListSubscriptionsResponse) {
    option (google.api.http) = {get: "/v1/subscriptions"};
  }

  // Create a new subscription with billing schedule and customer details
  rpc CreateSubscription(CreateSubscriptionRequest) returns (CreateSubscriptionResponse) {
    option (google.api.http) = {
      post: "/v1/subscriptions"
      body: "*"
    };
  }

  // Get detailed information about a specific subscription by ID
  rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse) {
    option (google.api.http) = {get: "/v1/subscriptions/{subscription_id}"};
  }

  // Update subscription details including billing schedule, pricing, or customer information
  rpc UpdateSubscription(UpdateSubscriptionRequest) returns (UpdateSubscriptionResponse) {
    option (google.api.http) = {
      put: "/v1/subscriptions/{subscription_id}"
      body: "*"
    };
  }

  // Cancel a subscription with optional immediate or end-of-period termination
  rpc CancelSubscription(CancelSubscriptionRequest) returns (CancelSubscriptionResponse) {
    option (google.api.http) = {delete: "/v1/subscriptions/{subscription_id}"};
  }

  // Activate a previously paused or cancelled subscription to resume billing
  rpc ActivateSubscription(ActivateSubscriptionRequest) returns (ActivateSubscriptionResponse) {
    option (google.api.http) = {
      post: "/v1/subscriptions/{subscription_id}/activate"
      body: "*"
    };
  }

  // Manually trigger invoice generation
  rpc TriggerInvoiceGeneration(TriggerInvoiceGenerationRequest) returns (TriggerInvoiceGenerationResponse) {
    option (google.api.http) = {
      post: "/v1/subscriptions/{subscription_id}/invoice"
      body: "*"
    };
  }

  // Attach orders to a subscription
  rpc AttachOrdersToSubscription(AttachOrdersRequest) returns (AttachOrdersResponse) {
    option (google.api.http) = {
      post: "/v1/subscriptions/{subscription_id}/orders"
      body: "*"
    };
  }

  // Get invoice summaries for a subscription
  rpc GetSubscriptionInvoices(GetSubscriptionInvoicesRequest) returns (GetSubscriptionInvoicesResponse) {
    option (google.api.http) = {get: "/v1/subscriptions/{subscription_id}/invoices"};
  }
}

// Subscription model for responses
message Subscription {
  string subscription_id = 1;
  string user_id = 2;
  string billing_interval = 3;
  string billing_strategy = 4;
  int32 billing_period_value = 5;
  int32 invoice_day = 6;
  bool front_loaded = 7;
  double deposit_amount = 8;
  bool is_paygo = 9;
  string status = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  google.protobuf.Timestamp end_date = 13;
}

// List subscriptions
message ListSubscriptionsRequest {}
message ListSubscriptionsResponse {
  repeated Subscription subscriptions = 1;
}

// Get subscription
message GetSubscriptionRequest {
  string subscription_id = 1;
}
message GetSubscriptionResponse {
  Subscription subscription = 1;
}

// Create subscription
message CreateSubscriptionRequest {
  string user_id = 1;
  string billing_interval = 2;
  string billing_strategy = 3;
  int32 billing_period_value = 4;
  int32 invoice_day = 5;
  bool front_loaded = 6;
  double deposit_amount = 7;
  bool is_paygo = 8;
}
message CreateSubscriptionResponse {
  string subscription_id = 1;
  string status = 2;
  google.protobuf.Timestamp created_at = 3;
}

// Update subscription
message UpdateSubscriptionRequest {
  string subscription_id = 1;
  string billing_interval = 2;
  string billing_strategy = 3;
  int32 billing_period_value = 4;
  int32 invoice_day = 5;
  bool front_loaded = 6;
  double deposit_amount = 7;
  bool is_paygo = 8;
}
message UpdateSubscriptionResponse {
  Subscription subscription = 1;
}

// Cancel subscription
message CancelSubscriptionRequest {
  string subscription_id = 1;
}
message CancelSubscriptionResponse {
  string subscription_id = 1;
  string status = 2;
}

// Activate subscription
message ActivateSubscriptionRequest {
  string subscription_id = 1;
}
message ActivateSubscriptionResponse {
  string subscription_id = 1;
  string status = 2;
}

// Trigger invoice generation
message TriggerInvoiceGenerationRequest {
  string subscription_id = 1;
}
message TriggerInvoiceGenerationResponse {
  string invoice_id = 1;
  string status = 2;
}

// Order related messages
message OrderItem {
  string item_id = 1;
  double amount = 2;
  string description = 3;
}

message AttachOrdersRequest {
  string subscription_id = 1;
  repeated OrderItem items = 2;
  billing.BillingSchedule billing_schedule = 3;
}

message AttachOrdersResponse {
  string status = 1;
  repeated string order_ids = 2;
}

// Invoice summary messages
message GetSubscriptionInvoicesRequest {
  string subscription_id = 1;
}

message GetSubscriptionInvoicesResponse {
  repeated billing.InvoiceSummary invoices = 1;
}
