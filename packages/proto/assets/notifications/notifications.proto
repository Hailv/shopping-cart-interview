syntax = "proto3";

package notifications;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/cinchprotocol/cinch-api/packages/proto/pkg/proto/assets/notifications";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Notifications API"
    version: "1.0"
    description: "Notifications service API for managing and delivering real-time notifications, alerts, and messaging to users across multiple channels"
  }
};

// NotificationsService provides notification delivery and management functionality
// including real-time alerts, email notifications, and multi-channel messaging
service NotificationsService {
  // Health check endpoint to verify service availability and notification delivery status
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {
    option (google.api.http) = {get: "/v1/notifications/health"};
  }

  // Create and send a new notification to a user with specified content and amount context
  rpc CreateNotification(CreateNotificationRequest) returns (CreateNotificationResponse) {
    option (google.api.http) = {
      post: "/v1/notifications"
      body: "*"
    };
  }
}

// Health check request message - no parameters required
message HealthCheckRequest {}

// Health check response containing service and delivery channel status information
message HealthCheckResponse {
  // Service status indicator including notification delivery health ("healthy", "degraded", "unhealthy")
  string status = 1;
}

// Request message for creating and sending a notification
message CreateNotificationRequest {
  // Unique identifier for the user to receive the notification (UUID format)
  string user_id = 1;
  // Amount value associated with the notification context (e.g., payment amount, billing amount)
  double amount = 2;
}

// Response message for notification creation and delivery
message CreateNotificationResponse {
  // Operation status indicating notification creation and delivery status ("sent", "queued", "failed")
  string status = 1;
  // Confirmed amount value that was included in the notification
  double amount = 2;
}
