version: "3.8"

# Define common configurations using YAML anchors
x-service-base: &service-base
  build:
    context: .
  volumes:
    - ./packages:/app/packages
    - go-mod-cache:/go/pkg/mod
  networks:
    - cinch-network
  depends_on:
    mysql-db:
      condition: service_healthy
    redis-cache:
      condition: service_healthy
    temporal:
      condition: service_healthy
    temporal-admin-tools:
      condition: service_started
    jaeger:
      condition: service_started

x-service-env: &service-env
  ENV: dev
  REDIS_URI: redis://redis-cache:6379/0
  LOG_JSON: "true"
  TEMPORAL_HOST: temporal:7233
  TEMPORAL_NAMESPACE: default
  DATABASE_URI_PREFIX: "mysql://cinch:cinch@tcp(mysql-db:3306)"

services:
  # --- Jaeger ---
  jaeger:
    image: jaegertracing/all-in-one:1.48
    container_name: jaeger
    ports:
      - "16686:16686" # UI
      - "14250:14250" # gRPC
      - "14268:14268" # HTTP
      - "6831:6831" # UDP
    networks:
      - cinch-network

  # --- MySQL Database ---
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    command: --default-authentication-plugin=mysql_native_password --log-bin-trust-function-creators=1
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=payments
      - MYSQL_USER=cinch
      - MYSQL_PASSWORD=cinch
      - MYSQL_MULTIPLE_DATABASES=wallets,payments,billing,ledgers,notifications,temporal,temporal_visibility,adapterstripe,organisations
    ports:
      - "3306:3306"
    networks:
      - cinch-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$$MYSQL_ROOT_PASSWORD",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./scripts/db_functions.sql:/docker-entrypoint-initdb.d/01-db-functions.sql
      - ./scripts/init-temporal-db.sh:/docker-entrypoint-initdb.d/02-init-temporal-db.sh

  # --- Redis Cache ---
  redis-cache:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      - cinch-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Temporal Services ---
  temporal:
    container_name: temporal
    image: temporalio/auto-setup:1.22.3
    environment:
      - DB=mysql
      - DB_PORT=3306
      - MYSQL_USER=cinch
      - MYSQL_PWD=cinch
      - MYSQL_SEEDS=mysql-db
      - DYNAMIC_CONFIG_FILE_PATH=/etc/temporal/config/dynamicconfig/development.yaml
    ports:
      - "7233:7233"
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - cinch-network
    healthcheck:
      test: ["CMD", "tctl", "--address", "temporal:7233", "cluster", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./config/dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    container_name: temporal-admin-tools
    image: temporalio/admin-tools:1.22.3
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    networks:
      - cinch-network
    depends_on:
      - temporal

  temporal-ui:
    container_name: temporal-ui
    image: temporalio/ui:2.21.3
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:8080
    ports:
      - "8088:8080"
    networks:
      - cinch-network
    depends_on:
      temporal:
        condition: service_healthy

  # --- Monitoring Stack ---
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "9090:9090"
    networks:
      - cinch-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - cinch-network
    depends_on:
      - prometheus
      - loki

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - cinch-network
    volumes:
      - ./config/loki:/etc/loki
      - loki_data:/loki

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    networks:
      - cinch-network
    volumes:
      - /var/log:/var/log
      - ./config/promtail:/etc/promtail
      - ./services:/app/services
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - loki

  # --- Frontend Service ---
  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
      target: dev
    container_name: frontend
    ports:
      - "3001:5173"
    volumes:
      - ./services/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
    networks:
      - cinch-network

networks:
  cinch-network:
    driver: bridge

volumes:
  go-mod-cache:
  prometheus_data:
  grafana_data:
  loki_data:
