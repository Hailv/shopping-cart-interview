// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"

	"github.com/cinchprotocol/cinch-api/packages/core/pkg/uuid"
)

type PaymentMethodsStatus string

const (
	PaymentMethodsStatusActive   PaymentMethodsStatus = "active"
	PaymentMethodsStatusInactive PaymentMethodsStatus = "inactive"
)

func (e *PaymentMethodsStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PaymentMethodsStatus(s)
	case string:
		*e = PaymentMethodsStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for PaymentMethodsStatus: %T", src)
	}
	return nil
}

type NullPaymentMethodsStatus struct {
	PaymentMethodsStatus PaymentMethodsStatus
	Valid                bool // Valid is true if PaymentMethodsStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPaymentMethodsStatus) Scan(value interface{}) error {
	if value == nil {
		ns.PaymentMethodsStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PaymentMethodsStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPaymentMethodsStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PaymentMethodsStatus), nil
}

type PaymentMethod struct {
	ID                uuid.ID
	PaymentMethodCode string
	PartnerPmType     string
	DisplayName       sql.NullString
	Config            json.RawMessage
	Status            PaymentMethodsStatus
	CreatedAt         time.Time
	UpdatedAt         time.Time
}
